//1.   Создайте двумерный массив размера 2x3 целых чисел со значениями на Ваше усмотрение
//
//2.   Выведите сумму всех чисел созданного массива.
//
//3.   Создайте одномерный массив из 3-х элементов.
//
//4.   В значения массива из предыдущего пункта запишите сумму чисел из столбцов двумерного массива. Например, массив 2x3 был такой: {{1, 2, 3}, {4, 5, 6}}. Тогда одномерный массив должен получиться таким: {5, 7, 9}.
//
//5.   Выведите получившийся одномерный массив в консоль.
//
//6.   Создайте переменную типа float со значением 20.84.
//
//7.   Создайте 2 ссылки на созданную переменную.
//
//8.   Измените значение у ссылки на новое.
//
//9.   Убедитесь, что переменная и другая ссылка так же поменяли значение, выведя их в консоль.
//
//10.  Создайте функцию, которая принимает число и возвращает 0, если число 0 или отрицательное. Либо сумму чисел от 1 до данного числа, если оно положительное.
//
//11   Сделайте у созданной функции значение по умолчанию у параметра равное 1. Убедитесь, что теперь при вызове этой функции без параметра возвращается 1 (как сумма чисел от 1 до 1).
//
//12. Создайте функцию, которая принимает 4 значения, причём 2 последних передаются по ссылке.
//
//13.Внутри функции в первую ссылку запишите сумму первых двух параметров, а во вторую ссылку запишите произведение двух первых параметров.
//
//14.Вызовите функцию и убедитесь, что значения переданных переменных по ссылке после вызова функции изменились.
//
//15.Создайте переменную любого типа с любым значением и выведите её.
//
//16. Создайте любой цикл и выведите внутри него переменную из 1-го пункта 3 раза.
//
//17.В рамках цикла объявите ещё одну переменную с любым значением.
//
//18.Выведите её 3 раза внутри этого цикла.
//
//Попробуйте вывести, созданную переменную внутри цикла, за его пределами. Убедитесь, что компилятор выдаёт ошибку.

#include <iostream>
int summOfCount(int param = 1) {
    int result = 0;
    if (param <= 0) {
        return 0;
    }
    else {
        for (int i = 0; i <= param; i++) {
            result += i;
        }
        return result;
    }
}

void ssilk(int first, int b, int& c, int& d) {
    c = first + b;
    d = first * b;
}
int main()
{
    int arr[2][3] = {
        {1,3,5},
        {4,2,3}
    };
    int arrSumm = 0;
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 3; j++) {
            arrSumm += arr[i][j];
        }
    }
    std::cout << arrSumm << std::endl;
    int w[3] = { arr[0][0] + arr[1][0], arr[0][1] + arr[1][1],arr[0][2] + arr[1][2] };
    for (int i = 0; i < 3; i++) {
        std::cout << w[i] << " \n";
    }
    float b = 20.84;
    float& sb1 = b;
    float& sb2 = b;
    sb2 = 12.4;

    std::cout << b << " " << sb1 << " " << sb2 << std::endl;
    std::cout << summOfCount() << std::endl;
    int test1 = 4;
    int test2 = 2;
    ssilk(4, 7, test1, test2);
    std::cout << test1 << " " << test2 << std::endl;

    int l = 9;
    std::cout << l << std::endl;
    for (int i = 0; i < 3; i++) {
        std::cout << l << std::endl;
        int j = 13;
        std::cout << j << std::endl;

    }
}
